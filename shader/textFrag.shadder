#version 410
#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#define COMPAT_FRAGCOLOR FragColor
out vec4 COMPAT_FRAGCOLOR;
#else
#define COMPAT_VARYING varying
#define COMPAT_ATTRIBUTE attribute
#define COMPAT_TEXTURE texture2D
#define COMPAT_FRAGCOLOR gl_FragColor
#endif
uniform sampler2D Texture;
in vec2 fragTexCoord;

float median(float r, float g, float b) {
	return max(min(r, g), min(max(r, g), b));
}

void main() {
	vec3 sampler2D = texture(Texture, fragTexCoord).rgb;
	ivec2 sz = textureSize(Texture, 0).xy;
	float dx = dFdx(fragTexCoord.x) * sz.x;
	float dy = dFdy(fragTexCoord.y) * sz.y;
	float toPixels = 8.0 * inversesqrt(dx * dx + dy * dy);
	float sigDist = median(sampler2D.r, sampler2D.g, sampler2D.b);
	float w = fwidth(sigDist);
	float opacity = smoothstep(0.5 - w, 0.5 + w, sigDist);
	COMPAT_FRAGCOLOR = vec4(vec3(0.5,0.5,1.0), opacity);
	//COMPAT_FRAGCOLOR = vec4(1, 1, 1, 1.0);

}